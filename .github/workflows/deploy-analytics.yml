name: analytics-service CI/CD Flow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  CLUSTER_NAME: lugx-cluster
  CLUSTER_REGION: us-central1
  DEPLOYMENT_NAME: analytics-service
  IMAGE: analytics-service
  TAG: prod
  REPO_NAME: lugx-repo

jobs:
  build-and-deploy:
    name: Build & Deploy Analytics + ClickHouse
    runs-on: ubuntu-latest

    steps:
      - name: 🔄 Checkout Repository
        uses: actions/checkout@v3

      - name: ☕ Set up JDK 21
        uses: actions/setup-java@v1
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: 🧱 Build with Maven
        run: mvn clean install -DskipTests

      - name: 🔐 Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'

      - name: ⚙️ Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GKE_PROJECT }}

      - name: 🐳 Configure Docker for Artifact Registry
        run: gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      - name: 🏗️ Build Docker Image
        run: |
          IMAGE_URI="us-central1-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$IMAGE:$TAG"
          docker build -t $IMAGE_URI .
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: 🚀 Push Docker Image
        run: docker push ${{ env.IMAGE_URI }}

      - name: 🔑 Get GKE Cluster Credentials
        run: |
          gcloud container clusters get-credentials "$CLUSTER_NAME" \
            --region "$CLUSTER_REGION" \
            --project "$PROJECT_ID"

      - name: 🗃️ Deploy ClickHouse (PVC, Service, Deployment)
        run: |
          kubectl apply -f --validate=false k8s/clickhouse-data-persistentvolumeclaim.yaml
          kubectl apply -f --validate=false k8s/clickhouse-service.yaml
          kubectl apply -f --validate=false k8s/clickhouse-deployment.yaml

      - name: 📦 Deploy Analytics Service (Service + Deployment)
        run: |
          kubectl apply -f --validate=false k8s/analytics-service-service.yaml
          kubectl apply -f --validate=false k8s/analytics-service-deployment.yaml
          kubectl rollout restart deployment $DEPLOYMENT_NAME

      - name: ✅ Confirm Rollout Completion
        run: kubectl rollout status deployment/$DEPLOYMENT_NAME --timeout=60s
